{"version":3,"file":"static/js/574.e20c47a0.chunk.js","mappings":"yOAGaA,EAAoBC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,oHAO9BC,GAAaH,EAAAA,EAAAA,IAAOI,EAAAA,GAAPJ,CAAYK,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wEAMzBI,GAAcN,EAAAA,EAAAA,IAAOO,EAAAA,GAAPP,CAAaQ,IAAAA,GAAAN,EAAAA,EAAAA,GAAA,gUAQnB,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAMvB,SAAAF,GAAC,OAAIA,EAAEC,MAAME,OAAOC,IAAI,IAIhCC,GAAWd,EAAAA,EAAAA,IAAOe,EAAAA,GAAPf,CAAoBgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,2FACjC,SAAAO,GAAC,OAAIA,EAAEC,MAAME,OAAOK,GAAG,IAGf,SAAAR,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IAG7BO,EAAclB,EAAAA,GAAAA,OAAamB,IAAAA,GAAAjB,EAAAA,EAAAA,GAAA,ySAExB,SAAAO,GAAC,OAAIA,EAAEC,MAAMC,QAAQ,EAAE,IACpB,SAAAF,GAAC,OAAIA,EAAEC,MAAMU,MAAM,IAChB,SAAAX,GAAC,OAAIA,EAAEC,MAAME,OAAOC,IAAI,I,8BCjCxCQ,EAAqBC,EAAAA,KAAaC,MAAM,CAC5CC,KAAMF,EAAAA,KACHG,IAAI,EAAG,cACPC,IAAI,GAAI,aACRC,SAAS,YACZC,MAAON,EAAAA,KAAaM,MAAM,iBAAiBD,SAAS,YACpDE,SAAUP,EAAAA,KACPG,IAAI,EAAG,sDACPE,SAAS,cAGDG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAIjB,OACEC,EAAAA,EAAAA,KAAClC,EAAiB,CAAAmC,UAChBD,EAAAA,EAAAA,KAACE,EAAAA,GAAM,CACLC,cAAe,CAAEZ,KAAM,GAAII,MAAO,GAAIC,SAAU,IAChDQ,iBAAkBhB,EAClBiB,SAAU,SAACC,EAAQC,IAPN,SAAAD,GAAUR,GAASU,EAAAA,EAAAA,IAASF,GAAS,CAQhDG,CAAWH,GACXC,EAAQG,WACV,EAAET,UAEFU,EAAAA,EAAAA,MAACzC,EAAU,CAAA+B,SAAA,EACTD,EAAAA,EAAAA,KAAC3B,EAAW,CAACkB,KAAK,OAAOqB,KAAK,OAAOC,YAAY,cACjDb,EAAAA,EAAAA,KAACnB,EAAQ,CAACU,KAAK,OAAOuB,UAAU,SAChCd,EAAAA,EAAAA,KAAC3B,EAAW,CAACkB,KAAK,QAAQqB,KAAK,QAAQC,YAAY,WACnDb,EAAAA,EAAAA,KAACnB,EAAQ,CAACU,KAAK,QAAQuB,UAAU,SACjCd,EAAAA,EAAAA,KAAC3B,EAAW,CAACkB,KAAK,WAAWqB,KAAK,WAAWC,YAAY,cACzDb,EAAAA,EAAAA,KAACnB,EAAQ,CAACU,KAAK,WAAWuB,UAAU,SACpCd,EAAAA,EAAAA,KAACf,EAAW,CAAC2B,KAAK,SAAQX,SAAC,mBAKrC,EChDe,SAASc,IACtB,OAAOf,EAAAA,EAAAA,KAACH,EAAY,GACtB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.jsx","pages/RegisterPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const RegisterContainer = styled.div`\n  min-height: calc(100vh - 150px);\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const StyledForm = styled(Form)`\n  width: 320px;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const StyledLabel = styled(Field)`\n  display: flex;\n  flex-direction: column;\n  width: 100%;\n  margin-bottom: 16px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.spacing(1)};\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 9px 47px 11px rgba(51, 51, 51, 0.18);\n    outline-color: ${p => p.theme.colors.grey};\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.red};\n  font-style: italic;\n  font-size: 12px;\n  margin-bottom: ${p => p.theme.spacing(2)};\n`;\n\nexport const RegisterBtn = styled.button`\n  display: block;\n  margin-top: ${p => p.theme.spacing(1)};\n  border-radius: ${p => p.theme.borRad};\n  border: 1px solid ${p => p.theme.colors.grey};\n  width: 100%;\n  padding: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 9px 47px 11px rgba(51, 51, 51, 0.18);\n    cursor: pointer;\n  }\n`;\n","import { useDispatch } from 'react-redux';\nimport {\n  StyledForm,\n  StyledLabel,\n  RegisterBtn,\n  RegisterContainer,\n  ErrorMsg,\n} from './RegisterForm.styled';\nimport { register } from 'redux/auth/operations';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\n\nconst RegisterFormSchema = Yup.object().shape({\n  name: Yup.string()\n    .min(2, 'Too Short!')\n    .max(50, 'Too Long!')\n    .required('Required'),\n  email: Yup.string().email('Invalid email').required('Required'),\n  password: Yup.string()\n    .min(8, 'Password is too short - should be 8 chars minimum.')\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  const onRegister = values => dispatch(register(values));\n\n  return (\n    <RegisterContainer>\n      <Formik\n        initialValues={{ name: '', email: '', password: '' }}\n        validationSchema={RegisterFormSchema}\n        onSubmit={(values, actions) => {\n          onRegister(values);\n          actions.resetForm();\n        }}\n      >\n        <StyledForm>\n          <StyledLabel name=\"name\" type=\"text\" placeholder=\"Username\" />\n          <ErrorMsg name=\"name\" component=\"div\" />\n          <StyledLabel name=\"email\" type=\"email\" placeholder=\"Email\" />\n          <ErrorMsg name=\"email\" component=\"div\" />\n          <StyledLabel name=\"password\" type=\"password\" placeholder=\"Password\" />\n          <ErrorMsg name=\"password\" component=\"div\" />\n          <RegisterBtn type=\"submit\">Register</RegisterBtn>\n        </StyledForm>\n      </Formik>\n    </RegisterContainer>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nexport default function RegisterPage() {\n  return <RegisterForm />;\n}\n"],"names":["RegisterContainer","styled","_templateObject","_taggedTemplateLiteral","StyledForm","Form","_templateObject2","StyledLabel","Field","_templateObject3","p","theme","spacing","colors","grey","ErrorMsg","ErrorMessage","_templateObject4","red","RegisterBtn","_templateObject5","borRad","RegisterFormSchema","Yup","shape","name","min","max","required","email","password","RegisterForm","dispatch","useDispatch","_jsx","children","Formik","initialValues","validationSchema","onSubmit","values","actions","register","onRegister","resetForm","_jsxs","type","placeholder","component","RegisterPage"],"sourceRoot":""}