{"version":3,"file":"static/js/85.b4bf9439.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.styled.js","redux/contacts/selectors.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","components/ContactList/ContactList.styled.js","components/ContactListItem/ContactListItem.styled.js","components/ModalEditItem/ModalEditItem.styled.js","components/ModalEditItem/ModalEditItem.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.jsx","pages/ContactsPage.jsx"],"sourcesContent":["import styled from 'styled-components';\nimport { Form, Field, ErrorMessage } from 'formik';\n\nexport const StyledForm = styled(Form)`\n  background-color: ${p => p.theme.colors.green};\n  padding: ${p => p.theme.spacing(3)};\n  border-radius: ${p => p.theme.borRad};\n  margin-bottom: ${p => p.theme.spacing(3)};\n  box-shadow: ${p => p.theme.boxSh.one}, ${p => p.theme.boxSh.two},\n    ${p => p.theme.boxSh.three};\n`;\n\nexport const StyledField = styled(Field)`\n  width: 100%;\n  padding: 8px;\n  border-radius: ${p => p.theme.borRad};\n  border: 1px solid transparent;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-bottom: ${p => p.theme.spacing(1)};\n  }\n  &:hover,\n  &:focus {\n    box-shadow: 0 9px 47px 11px rgba(51, 51, 51, 0.18);\n    outline-color: ${p => p.theme.colors.grey};\n  }\n`;\n\nexport const ErrorMsg = styled(ErrorMessage)`\n  color: ${p => p.theme.colors.red};\n  font-style: italic;\n  font-size: 12px;\n  margin-bottom: ${p => p.theme.spacing(2)};\n`;\n\nexport const AddBtn = styled.button`\n  display: block;\n  margin-top: ${p => p.theme.spacing(1)};\n  border-radius: ${p => p.theme.borRad};\n  border: 1px solid ${p => p.theme.colors.grey};\n  width: 100%;\n  padding: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 9px 47px 11px rgba(51, 51, 51, 0.18);\n    cursor: pointer;\n  }\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectStore = s => s.contacts;\nexport const selectContacts = s => s.contacts.items;\nexport const selectIsLoading = s => s.contacts.isLoading;\nexport const selectError = s => s.contacts.error;\nexport const selectFilter = s => s.filter;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilter],\n  (contacts, filter) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase())\n    );\n  }\n);\n","import { useDispatch, useSelector } from 'react-redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport {\n  StyledForm,\n  StyledField,\n  ErrorMsg,\n  AddBtn,\n} from './ContactForm.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport { addContact } from 'redux/contacts/operations';\n\nconst nameRegExp = /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/;\nconst numberRegExp =\n  /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}/;\nconst nameRegExpMsg = `Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan`;\nconst numberRegExpMsg = `Phone number must be digits and can contain spaces, dashes, parentheses and can start with +`;\n\nexport const ContactFormSchema = Yup.object().shape({\n  name: Yup.string().required('Required').matches(nameRegExp, nameRegExpMsg),\n  number: Yup.string()\n    .required('Required')\n    .matches(numberRegExp, numberRegExpMsg),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onAdd = (newContact, actions) => {\n    const isExistName = contacts.some(\n      contact => contact.name.toLowerCase() === newContact.name.toLowerCase()\n    );\n    const isExistNumber = contacts.some(\n      contact => contact.number === newContact.number\n    );\n\n    if (isExistName) {\n      alert(`Name ${newContact.name} is already in contacts.`);\n      return;\n    }\n\n    if (isExistNumber) {\n      alert(`Number ${newContact.number} is already in contacts.`);\n      return;\n    }\n\n    dispatch(addContact(newContact));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={{ name: '', number: '' }}\n      validationSchema={ContactFormSchema}\n      onSubmit={(values, actions) => onAdd(values, actions)}\n    >\n      <StyledForm>\n        <StyledField name=\"name\" type=\"text\" placeholder=\"Name\" />\n        <ErrorMsg name=\"name\" component=\"div\" />\n        <StyledField name=\"number\" type=\"tel\" placeholder=\"Phone number\" />\n        <ErrorMsg name=\"number\" component=\"div\" />\n        <AddBtn type=\"submit\">Add contact</AddBtn>\n      </StyledForm>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const InputFilter = styled.input`\n  max-width: 180px;\n  margin-top: ${p => p.theme.spacing(1)};\n  margin-bottom: ${p => p.theme.spacing(1)};\n  padding: 8px;\n  border-radius: ${p => p.theme.borRad};\n  border: 1px solid ${p => p.theme.colors.grey};\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:hover,\n  &:focus {\n    border: 1px solid ${p => p.theme.colors.grey};\n    outline-color: ${p => p.theme.colors.grey};\n    box-shadow: 0 9px 47px 11px rgba(51, 51, 51, 0.18);\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContact } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { InputFilter } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n  return (\n    <div>\n      <InputFilter\n        type=\"text\"\n        value={filter}\n        placeholder=\"Find contacts by name\"\n        aria-label=\"Search contact in list\"\n        onChange={e => {\n          dispatch(filterContact(e.target.value));\n        }}\n      />\n    </div>\n  );\n};\n","import styled from 'styled-components';\n\nexport const List = styled.ul`\n  box-shadow: ${p => p.theme.boxSh.one}, ${p => p.theme.boxSh.two},\n    ${p => p.theme.boxSh.three};\n  border-radius: ${p => p.theme.borRad};\n  padding-top: ${p => p.theme.spacing(1)};\n  padding-right: ${p => p.theme.spacing(3)};\n  padding-bottom: ${p => p.theme.spacing(1)};\n  padding-left: ${p => p.theme.spacing(3)};\n  background-color: ${p => p.theme.colors.green};\n  height: 100%;\n`;\n\nexport const ListMes = styled.p`\n  margin-top: ${p => p.theme.spacing(2)};\n  margin-left: ${p => p.theme.spacing(2)};\n`;\n","import styled from 'styled-components';\n\nexport const ListItem = styled.li`\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    border-bottom: 1px solid ${p => p.theme.colors.grey};\n  }\n\n  &:hover,\n  &:focus {\n    transform: scale(1.02);\n  }\n`;\nexport const ListItemText = styled.p`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ListPhone = styled.span`\n  font-size: 12px;\n  text-align: end;\n`;\nexport const BtnWrapper = styled.span`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nexport const ListItemBtn = styled.button`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  width: 32px;\n  height: 32px;\n  padding: 0;\n  margin: 0;\n  border: none;\n  border-radius: 4px;\n  border-color: transparent;\n  background-color: transparent;\n  cursor: pointer;\n  color: #f44336;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-right: 4px;\n  }\n\n  &:hover,\n  &:focus {\n    background-color: #e2e5e8;\n  }\n`;\n","import styled from 'styled-components';\nimport { Form } from 'formik';\n\nexport const StyledEditForm = styled(Form)`\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 400px;\n  border-radius: 4px;\n  box-shadow: ${p => p.theme.boxSh.one}, ${p => p.theme.boxSh.two},\n    ${p => p.theme.boxSh.three};\n  background-color: ${p => p.theme.colors.green};\n  padding: 16px;\n`;\n\nexport const EditBtnWrap = styled.div`\n  display: flex;\n`;\n\nexport const EditBtn = styled.button`\n  display: block;\n  margin-top: ${p => p.theme.spacing(1)};\n  border-radius: ${p => p.theme.borRad};\n  border: 1px solid ${p => p.theme.colors.grey};\n  width: 100%;\n  padding: 4px;\n  transition: all 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  &:not(:last-child) {\n    margin-right: ${p => p.theme.spacing(8)};\n  }\n\n  &:hover,\n  &:focus {\n    box-shadow: 0 9px 47px 11px rgba(51, 51, 51, 0.18);\n    cursor: pointer;\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { editContact } from 'redux/contacts/operations';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Modal from '@mui/material/Modal';\nimport { ContactFormSchema } from 'components/ContactForm/ContactForm';\nimport { Formik } from 'formik';\nimport { StyledField, ErrorMsg } from '../ContactForm/ContactForm.styled';\nimport { StyledEditForm, EditBtn, EditBtnWrap } from './ModalEditItem.styled';\nimport { selectContacts } from 'redux/contacts/selectors';\n\nexport const ModalEditItem = ({\n  open,\n  close,\n  contact: { id, name, number },\n}) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContacts);\n\n  const onApply = editedContactValues => {\n    const isExistName = contacts.some(\n      contact =>\n        contact.name.toLowerCase() === editedContactValues.name.toLowerCase() &&\n        id !== contact.id\n    );\n    const isExistNumber = contacts.some(\n      contact =>\n        contact.number === editedContactValues.number && id !== contact.id\n    );\n    const isSameName =\n      name.toLowerCase() === editedContactValues.name.toLowerCase();\n    const isSameNumber = number === editedContactValues.number;\n\n    if (isSameName && isSameNumber) {\n      alert(`Please enter new values`);\n      return;\n    }\n    if (isExistName) {\n      alert(`Name ${editedContactValues.name} is already in contacts.`);\n      return;\n    }\n    if (isExistNumber) {\n      alert(`Number ${editedContactValues.number} is already in contacts.`);\n      return;\n    }\n\n    dispatch(editContact(editedContactValues));\n    close();\n  };\n\n  return (\n    <div>\n      <Modal open={open} onClose={close}>\n        <>\n          <Formik\n            initialValues={{ id, name, number }}\n            validationSchema={ContactFormSchema}\n            onSubmit={values => onApply(values)}\n          >\n            <StyledEditForm>\n              <StyledField name=\"name\" type=\"text\" placeholder=\"Name\" />\n              <ErrorMsg name=\"name\" component=\"div\" />\n              <StyledField\n                name=\"number\"\n                type=\"tel\"\n                placeholder=\"Phone number\"\n              />\n              <ErrorMsg name=\"number\" component=\"div\" />\n\n              <EditBtnWrap>\n                <EditBtn type=\"submit\">Apply</EditBtn>\n                <EditBtn type=\"button\" onClick={close}>\n                  Cancel\n                </EditBtn>\n              </EditBtnWrap>\n            </StyledEditForm>\n          </Formik>\n        </>\n      </Modal>\n    </div>\n  );\n};\n\nModalEditItem.propTypes = {\n  open: PropTypes.bool.isRequired,\n  close: PropTypes.func.isRequired,\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useState } from 'react';\nimport {\n  ListItem,\n  ListItemText,\n  ListPhone,\n  BtnWrapper,\n  ListItemBtn,\n} from './ContactListItem.styled';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { selectIsLoading } from 'redux/contacts/selectors';\nimport DeleteIcon from '@mui/icons-material/Delete';\nimport EditIcon from '@mui/icons-material/Edit';\nimport { ModalEditItem } from 'components/ModalEditItem/ModalEditItem';\n\nexport const ContactListItem = ({ contact }) => {\n  const { id, name, number } = contact;\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n\n  const [open, setOpen] = useState(false);\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n\n  return (\n    <ListItem>\n      <ListItemText>\n        <span>\n          {name}: <ListPhone>{number}</ListPhone>\n        </span>\n        <BtnWrapper>\n          <ListItemBtn\n            aria-label=\"Edit contact\"\n            disabled={isLoading}\n            onClick={handleOpen}\n          >\n            <EditIcon />\n          </ListItemBtn>\n          <ListItemBtn\n            aria-label=\"Delete contact\"\n            disabled={isLoading}\n            onClick={() => dispatch(deleteContact(id))}\n          >\n            <DeleteIcon />\n          </ListItemBtn>\n        </BtnWrapper>\n      </ListItemText>\n      <ModalEditItem open={open} close={handleClose} contact={contact} />\n    </ListItem>\n  );\n};\n\nContactListItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }).isRequired,\n};\n","import { useSelector } from 'react-redux';\nimport { List, ListMes } from './ContactList.styled';\nimport { ContactListItem } from '../ContactListItem/ContactListItem';\nimport { selectVisibleContacts } from 'redux/contacts/selectors';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectVisibleContacts);\n\n  return (\n    <>\n      {contacts.length > 0 ? (\n        <List>\n          {contacts.map(contact => (\n            <ContactListItem key={contact.id} contact={contact} />\n          ))}\n        </List>\n      ) : (\n        <ListMes>No matches</ListMes>\n      )}\n    </>\n  );\n};\n","import { useSelector, useDispatch } from 'react-redux';\nimport { ContactForm } from '../components/ContactForm/ContactForm';\nimport { Filter } from '../components/Filter/Filter';\nimport { ContactList } from '../components/ContactList/ContactList';\nimport { selectStore } from 'redux/contacts/selectors';\nimport { Loader } from '../components/Loader/Loader';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/contacts/operations';\n\nexport default function ContactsPage() {\n  const dispatch = useDispatch();\n  const { items, isLoading, error } = useSelector(selectStore);\n  const showLoader = isLoading && !error;\n  const listEmpty = !isLoading && !items.length;\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      <h2>Contacts</h2>\n      {showLoader && <Loader />}\n      {items.length > 0 && (\n        <>\n          <Filter />\n          <ContactList />\n        </>\n      )}\n      {listEmpty && <p>Contact list is empty</p>}\n    </div>\n  );\n}\n"],"names":["StyledForm","styled","Form","_templateObject","_taggedTemplateLiteral","p","theme","colors","green","spacing","borRad","boxSh","one","two","three","StyledField","Field","_templateObject2","grey","ErrorMsg","ErrorMessage","_templateObject3","red","AddBtn","_templateObject4","selectStore","s","contacts","selectContacts","items","selectIsLoading","isLoading","selectFilter","filter","selectVisibleContacts","createSelector","contact","name","toLowerCase","includes","ContactFormSchema","Yup","shape","required","matches","number","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","newContact","isExistName","some","isExistNumber","alert","concat","addContact","resetForm","onAdd","children","_jsxs","type","placeholder","component","InputFilter","Filter","value","onChange","e","filterContact","target","List","ListMes","ListItem","ListItemText","ListPhone","BtnWrapper","ListItemBtn","_templateObject5","StyledEditForm","EditBtnWrap","EditBtn","ModalEditItem","_ref","open","close","_ref$contact","id","Modal","onClose","_Fragment","editedContactValues","isSameName","isSameNumber","editContact","onApply","onClick","ContactListItem","_useState","useState","_useState2","_slicedToArray","setOpen","disabled","EditIcon","deleteContact","DeleteIcon","ContactList","length","map","ContactsPage","_useSelector","error","showLoader","listEmpty","useEffect","fetchContacts","Loader"],"sourceRoot":""}